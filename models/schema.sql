CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TABLE FILE (
    ID BIGSERIAL NOT NULL,
    NAME varchar NOT NULL,
    EXTENSION varchar NOT NULL,
    PATH_ID bigint NOT NULL,
    TYPE varchar NOT NULL,
    DATE TIMESTAMP with time zone NOT NULL,
    SIZE bigint NOT NULL,
    HASH varchar NOT NULL,
    METADATA jsonb,
    CONSTRAINT PK_FILE PRIMARY KEY (ID)
);


CREATE TABLE PATH (
    ID BIGSERIAL NOT NULL,
    DIR varchar NOT NULL UNIQUE,
    HOST_ID bigint NOT NULL,
    CONSTRAINT PK_PATH PRIMARY KEY (ID)
);


CREATE TABLE HOST (
    ID BIGSERIAL NOT NULL,
    NAME varchar NOT NULL UNIQUE,
    DESCRIPTION varchar,
    METADATA jsonb,
    CONSTRAINT PK_HOST PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_ITEM (
    ID BIGSERIAL NOT NULL,
    NAME varchar,
    DESCRIPTION varchar,
    TYPE varchar,
    DATE integer,
    HASH varchar,
    LOCATION geometry(Geometry,4326),
    INFO jsonb,
    CONSTRAINT PK_MEDIA_ITEM PRIMARY KEY (ID)
);


CREATE TABLE FOLDER (
    ID BIGSERIAL NOT NULL,
    NAME varchar NOT NULL,
    DESCRIPTION varchar,
    PARENT_ID bigint,
    INFO jsonb,
    CONSTRAINT PK_FOLDER PRIMARY KEY (ID)
);


CREATE TABLE FOLDER_ENTRY (
    ID BIGSERIAL NOT NULL,
    FOLDER_ID bigint NOT NULL,
    ITEM_ID bigint NOT NULL,
    INDEX bigint,
    INFO jsonb,
    CONSTRAINT PK_FOLDER_ENTRY PRIMARY KEY (ID)
);


CREATE TABLE PERSON (
    ID BIGSERIAL NOT NULL,
    GENDER VARCHAR(1),
    BIRTHDAY integer,
    INFO jsonb,
    CONSTRAINT PK_PERSON PRIMARY KEY (ID)
);


CREATE TABLE PERSON_NAME (
    ID BIGSERIAL NOT NULL,
    PERSON_ID bigint NOT NULL,
    NAME varchar NOT NULL,
    PREFERRED boolean,
    INFO jsonb,
    CONSTRAINT PK_PERSON_NAME PRIMARY KEY (ID)
);


CREATE TABLE PERSON_ADDRESS (
    ID BIGSERIAL NOT NULL,
    ADDRESS_ID bigint NOT NULL,
    PERSON_ID bigint NOT NULL,
    TYPE varchar NOT NULL,
    PREFERRED boolean,
    INFO jsonb,
    CONSTRAINT PK_PERSON_ADDRESS PRIMARY KEY (ID)
);


CREATE TABLE PERSON_CONTACT (
    ID BIGSERIAL NOT NULL,
    PERSON_ID bigint NOT NULL,
    CONTACT varchar NOT NULL,
    TYPE varchar,
    INFO jsonb,
    CONSTRAINT PK_PERSON_CONTACT PRIMARY KEY (ID)
);


CREATE TABLE PLACE (
    ID BIGSERIAL NOT NULL,
    LOCATION geometry(Geometry,4326),
    INFO jsonb,
    CONSTRAINT PK_PLACE PRIMARY KEY (ID)
);


CREATE TABLE PLACE_NAME (
    ID BIGSERIAL NOT NULL,
    PLACE_ID bigint NOT NULL,
    NAME varchar NOT NULL,
    PREFERRED boolean,
    INFO jsonb,
    CONSTRAINT PK_PLACE_NAME PRIMARY KEY (ID)
);


CREATE TABLE ADDRESS (
    ID BIGSERIAL NOT NULL,
    STREET varchar,
    CITY varchar,
    STATE varchar,
    POSTAL_CODE varchar,
    PLACE_ID bigint,
    CONSTRAINT PK_ADDRESS PRIMARY KEY (ID)
);


CREATE TABLE KEYWORD (
    ID BIGSERIAL NOT NULL,
    WORD varchar NOT NULL UNIQUE,
    CONSTRAINT PK_KEYWORD PRIMARY KEY (ID)
);


CREATE TABLE FEATURE (
    ID BIGSERIAL NOT NULL,
    ITEM_ID bigint NOT NULL,
    COORDINATES jsonb NOT NULL,
    THUMBNAIL bytea,
    LABEL varchar,
    INFO jsonb,
    CONSTRAINT PK_FEATURE PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_PERSON (
    ID BIGSERIAL NOT NULL,
    ITEM_ID bigint NOT NULL,
    PERSON_ID bigint NOT NULL,
    INFO jsonb,
    CONSTRAINT PK_MEDIA_PERSON PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_PLACE (
    ID BIGSERIAL NOT NULL,
    ITEM_ID bigint NOT NULL,
    PLACE_ID bigint NOT NULL,
    INFO jsonb,
    CONSTRAINT PK_MEDIA_PLACE PRIMARY KEY (ID)
);


CREATE TABLE COMPONENT (
    ID BIGSERIAL NOT NULL,
    KEY VARCHAR(50) NOT NULL UNIQUE,
    LABEL varchar,
    DESCRIPTION varchar,
    INFO jsonb,
    CONSTRAINT PK_COMPONENT PRIMARY KEY (ID)
);


CREATE TABLE "user" (
    ID BIGSERIAL NOT NULL,
    PERSON_ID bigint NOT NULL,
    ACTIVE boolean NOT NULL DEFAULT true,
    CONSTRAINT PK_USER PRIMARY KEY (ID)
);


CREATE TABLE USER_ACCESS (
    ID BIGSERIAL NOT NULL,
    USER_ID bigint NOT NULL,
    COMPONENT_ID bigint NOT NULL,
    LEVEL integer NOT NULL DEFAULT 3,
    INFO jsonb,
    CONSTRAINT PK_USER_ACCESS PRIMARY KEY (ID)
);


CREATE TABLE USER_AUTHENTICATION (
    ID BIGSERIAL NOT NULL,
    USER_ID bigint NOT NULL,
    SERVICE varchar NOT NULL,
    KEY varchar NOT NULL,
    VALUE varchar,
    INFO jsonb,
    CONSTRAINT PK_USER_AUTHENTICATION PRIMARY KEY (ID)
);


CREATE TABLE USER_PREFERENCE (
    ID BIGSERIAL NOT NULL,
    USER_ID bigint NOT NULL,
    KEY varchar NOT NULL,
    VALUE jsonb NOT NULL,
    CONSTRAINT PK_USER_PREFERENCE PRIMARY KEY (ID)
);


CREATE TABLE USER_ACTIVITY (
    ID BIGSERIAL NOT NULL,
    USER_ID bigint NOT NULL,
    HOUR integer NOT NULL,
    MINUTE integer NOT NULL,
    COUNT integer NOT NULL,
    CONSTRAINT PK_USER_ACTIVITY PRIMARY KEY (ID)
);


CREATE TABLE USER_RATING (
    ID BIGSERIAL NOT NULL,
    USER_ID bigint NOT NULL,
    ITEM_ID bigint NOT NULL,
    DATE TIMESTAMP with time zone NOT NULL,
    RATING integer NOT NULL,
    COMMENT varchar,
    CONSTRAINT PK_USER_RATING PRIMARY KEY (ID)
);


CREATE TABLE USER_GROUP (
    ID BIGSERIAL NOT NULL,
    NAME varchar NOT NULL UNIQUE,
    DESCRIPTION varchar,
    CONSTRAINT PK_USER_GROUP PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_ACCESS (
    ID BIGSERIAL NOT NULL,
    ITEM_ID bigint NOT NULL,
    GROUP_ID bigint NOT NULL,
    READ_ONLY boolean NOT NULL,
    CONSTRAINT PK_MEDIA_ACCESS PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_LOG (
    ID BIGSERIAL NOT NULL,
    ITEM_ID bigint NOT NULL,
    USER_ID bigint,
    DATE TIMESTAMP with time zone NOT NULL,
    ACTION varchar NOT NULL,
    CONSTRAINT PK_MEDIA_LOG PRIMARY KEY (ID)
);


CREATE TABLE DATATYPE (
    ID BIGSERIAL NOT NULL,
    LABEL varchar NOT NULL UNIQUE,
    CONSTRAINT PK_DATATYPE PRIMARY KEY (ID)
);


CREATE TABLE DATA (
    ID BIGSERIAL NOT NULL,
    NAME varchar NOT NULL,
    DESCRIPTION varchar,
    TYPE_ID bigint NOT NULL,
    DATA jsonb,
    DATE TIMESTAMP with time zone,
    THUMBNAIL bytea,
    CONSTRAINT PK_DATA PRIMARY KEY (ID)
);


CREATE TABLE DATA_ACCESS (
    ID BIGSERIAL NOT NULL,
    DATASET_ID bigint NOT NULL,
    GROUP_ID bigint NOT NULL,
    READ_ONLY boolean NOT NULL DEFAULT true,
    CONSTRAINT PK_DATA_ACCESS PRIMARY KEY (ID)
);


CREATE TABLE MEDIA_ITEM_FILE (
    MEDIA_ITEM_ID BIGINT NOT NULL,
    FILE_ID BIGINT NOT NULL,
    CONSTRAINT FK_MEDIA_ITEM_FILE FOREIGN KEY (MEDIA_ITEM_ID) REFERENCES MEDIA_ITEM(ID)
        ON DELETE CASCADE ON UPDATE NO ACTION
);

ALTER TABLE MEDIA_ITEM_FILE ADD FOREIGN KEY (FILE_ID) REFERENCES FILE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

CREATE INDEX IDX_MEDIA_ITEM_FILE_MEDIA_ITEM_ID ON MEDIA_ITEM_FILE(MEDIA_ITEM_ID);
CREATE INDEX IDX_MEDIA_ITEM_FILE_FILE_ID ON MEDIA_ITEM_FILE(FILE_ID);

CREATE TABLE MEDIA_ITEM_KEYWORD (
    MEDIA_ITEM_ID BIGINT NOT NULL,
    KEYWORD_ID BIGINT NOT NULL,
    CONSTRAINT FK_MEDIA_ITEM_KEYWORD FOREIGN KEY (MEDIA_ITEM_ID) REFERENCES MEDIA_ITEM(ID)
        ON DELETE CASCADE ON UPDATE NO ACTION
);

ALTER TABLE MEDIA_ITEM_KEYWORD ADD FOREIGN KEY (KEYWORD_ID) REFERENCES KEYWORD(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

CREATE INDEX IDX_MEDIA_ITEM_KEYWORD_MEDIA_ITEM_ID ON MEDIA_ITEM_KEYWORD(MEDIA_ITEM_ID);
CREATE INDEX IDX_MEDIA_ITEM_KEYWORD_KEYWORD_ID ON MEDIA_ITEM_KEYWORD(KEYWORD_ID);


CREATE TABLE MEDIA_PERSON_FEATURE (
    MEDIA_PERSON_ID BIGINT NOT NULL,
    FEATURE_ID BIGINT NOT NULL,
    CONSTRAINT FK_MEDIA_PERSON_FEATURE FOREIGN KEY (MEDIA_PERSON_ID) REFERENCES MEDIA_PERSON(ID)
        ON DELETE CASCADE ON UPDATE NO ACTION
);

ALTER TABLE MEDIA_PERSON_FEATURE ADD FOREIGN KEY (FEATURE_ID) REFERENCES FEATURE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

CREATE INDEX IDX_MEDIA_PERSON_FEATURE_MEDIA_PERSON_ID ON MEDIA_PERSON_FEATURE(MEDIA_PERSON_ID);
CREATE INDEX IDX_MEDIA_PERSON_FEATURE_FEATURE_ID ON MEDIA_PERSON_FEATURE(FEATURE_ID);


CREATE TABLE MEDIA_PLACE_FEATURE (
    MEDIA_PLACE_ID BIGINT NOT NULL,
    FEATURE_ID BIGINT NOT NULL,
    CONSTRAINT FK_MEDIA_PLACE_FEATURE FOREIGN KEY (MEDIA_PLACE_ID) REFERENCES MEDIA_PLACE(ID)
        ON DELETE CASCADE ON UPDATE NO ACTION
);

ALTER TABLE MEDIA_PLACE_FEATURE ADD FOREIGN KEY (FEATURE_ID) REFERENCES FEATURE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

CREATE INDEX IDX_MEDIA_PLACE_FEATURE_MEDIA_PLACE_ID ON MEDIA_PLACE_FEATURE(MEDIA_PLACE_ID);
CREATE INDEX IDX_MEDIA_PLACE_FEATURE_FEATURE_ID ON MEDIA_PLACE_FEATURE(FEATURE_ID);


CREATE TABLE USER_GROUP_USER (
    USER_GROUP_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT FK_USER_GROUP_USER FOREIGN KEY (USER_GROUP_ID) REFERENCES USER_GROUP(ID)
        ON DELETE CASCADE ON UPDATE NO ACTION
);

ALTER TABLE USER_GROUP_USER ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

CREATE INDEX IDX_USER_GROUP_USER_USER_GROUP_ID ON USER_GROUP_USER(USER_GROUP_ID);
CREATE INDEX IDX_USER_GROUP_USER_USER_ID ON USER_GROUP_USER(USER_ID);



ALTER TABLE FILE ADD FOREIGN KEY (PATH_ID) REFERENCES PATH(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PATH ADD FOREIGN KEY (HOST_ID) REFERENCES HOST(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE FOLDER_ENTRY ADD FOREIGN KEY (FOLDER_ID) REFERENCES FOLDER(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE FOLDER_ENTRY ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PERSON_NAME ADD FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PERSON_ADDRESS ADD FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PERSON_ADDRESS ADD FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PERSON_CONTACT ADD FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PLACE_NAME ADD FOREIGN KEY (PLACE_ID) REFERENCES PLACE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE ADDRESS ADD FOREIGN KEY (PLACE_ID) REFERENCES PLACE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE FEATURE ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_PERSON ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_PERSON ADD FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_PLACE ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_PLACE ADD FOREIGN KEY (PLACE_ID) REFERENCES PLACE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE "user" ADD FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_ACCESS ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_ACCESS ADD FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_AUTHENTICATION ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_PREFERENCE ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_ACTIVITY ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE USER_RATING ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE USER_RATING ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_ACCESS ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_ACCESS ADD FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUP(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_LOG ADD FOREIGN KEY (ITEM_ID) REFERENCES MEDIA_ITEM(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE MEDIA_LOG ADD FOREIGN KEY (USER_ID) REFERENCES "user"(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE DATA ADD FOREIGN KEY (TYPE_ID) REFERENCES DATATYPE(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE DATA_ACCESS ADD FOREIGN KEY (DATASET_ID) REFERENCES DATA(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE DATA_ACCESS ADD FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUP(ID)
    ON DELETE CASCADE ON UPDATE NO ACTION;



CREATE INDEX IDX_FILE_PATH ON FILE(PATH_ID);
CREATE unique INDEX IDX_UNIQUE_FILE ON FILE(PATH_ID, NAME, EXTENSION);
CREATE INDEX IDX_PATH_HOST ON PATH(HOST_ID);
CREATE unique INDEX IDX_UNIQUE_PATH ON PATH(DIR, HOST_ID);
CREATE INDEX IDX_MEDIA_ITEM_LOCATION ON MEDIA_ITEM USING GIST(LOCATION);
CREATE INDEX IDX_MEDIA_ITEM_DATE ON MEDIA_ITEM(DATE);
CREATE INDEX IDX_MEDIA_ITEM_HASH ON MEDIA_ITEM(HASH);
CREATE unique INDEX IDX_FOLDER ON FOLDER(NAME, PARENT_ID);
CREATE INDEX IDX_FOLDER_ENTRY_FOLDER ON FOLDER_ENTRY(FOLDER_ID);
CREATE INDEX IDX_FOLDER_ENTRY_MEDIA_ITEM ON FOLDER_ENTRY(ITEM_ID);
CREATE unique INDEX IDX_FOLDER_ENTRY ON FOLDER_ENTRY(FOLDER_ID, ITEM_ID);
CREATE INDEX IDX_PERSON_NAME_PERSON ON PERSON_NAME(PERSON_ID);
CREATE unique INDEX IDX_PERSON_NAME ON PERSON_NAME(NAME, PERSON_ID);
CREATE INDEX IDX_PERSON_ADDRESS_ADDRESS ON PERSON_ADDRESS(ADDRESS_ID);
CREATE INDEX IDX_PERSON_ADDRESS_PERSON ON PERSON_ADDRESS(PERSON_ID);
CREATE unique INDEX IDX_PERSON_ADDRESS ON PERSON_ADDRESS(ADDRESS_ID);
CREATE INDEX IDX_PERSON_CONTACT_PERSON ON PERSON_CONTACT(PERSON_ID);
CREATE unique INDEX IDX_PERSON_CONTACT ON PERSON_CONTACT(CONTACT, PERSON_ID);
CREATE INDEX IDX_PLACE_LOCATION ON PLACE USING GIST(LOCATION);
CREATE INDEX IDX_PLACE_NAME_PLACE ON PLACE_NAME(PLACE_ID);
CREATE unique INDEX IDX_PLACE_NAME ON PLACE_NAME(NAME, PLACE_ID);
CREATE INDEX IDX_ADDRESS_PLACE ON ADDRESS(PLACE_ID);
CREATE INDEX IDX_FEATURE_MEDIA_ITEM ON FEATURE(ITEM_ID);
CREATE INDEX IDX_MEDIA_PERSON_MEDIA_ITEM ON MEDIA_PERSON(ITEM_ID);
CREATE INDEX IDX_MEDIA_PERSON_PERSON ON MEDIA_PERSON(PERSON_ID);
CREATE INDEX IDX_MEDIA_PLACE_MEDIA_ITEM ON MEDIA_PLACE(ITEM_ID);
CREATE INDEX IDX_MEDIA_PLACE_PLACE ON MEDIA_PLACE(PLACE_ID);
CREATE INDEX IDX_USER_PERSON ON "user"(PERSON_ID);
CREATE unique INDEX IDX_USER ON "user"(PERSON_ID);
CREATE INDEX IDX_USER_ACCESS_USER ON USER_ACCESS(USER_ID);
CREATE INDEX IDX_USER_ACCESS_COMPONENT ON USER_ACCESS(COMPONENT_ID);
CREATE unique INDEX IDX_USER_ACCESS ON USER_ACCESS(USER_ID, COMPONENT_ID);
CREATE INDEX IDX_USER_AUTHENTICATION_USER ON USER_AUTHENTICATION(USER_ID);
CREATE unique INDEX IDX_USER_AUTH ON USER_AUTHENTICATION(SERVICE, KEY);
CREATE INDEX IDX_USER_PREFERENCE_USER ON USER_PREFERENCE(USER_ID);
CREATE unique INDEX IDX_USER_PREFERENCE ON USER_PREFERENCE(USER_ID, KEY, VALUE);
CREATE INDEX IDX_USER_ACTIVITY_USER ON USER_ACTIVITY(USER_ID);
CREATE unique INDEX IDX_USER_ACTIVITY ON USER_ACTIVITY(USER_ID, HOUR, MINUTE);
CREATE INDEX IDX_USER_ACTIVITY_HOUR ON USER_ACTIVITY(HOUR);
CREATE INDEX IDX_USER_RATING_USER ON USER_RATING(USER_ID);
CREATE INDEX IDX_USER_RATING_MEDIA_ITEM ON USER_RATING(ITEM_ID);
CREATE unique INDEX IDX_USER_RATING ON USER_RATING(USER_ID, ITEM_ID);
CREATE INDEX IDX_MEDIA_ACCESS_MEDIA_ITEM ON MEDIA_ACCESS(ITEM_ID);
CREATE INDEX IDX_MEDIA_ACCESS_USER_GROUP ON MEDIA_ACCESS(GROUP_ID);
CREATE unique INDEX IDX_MEDIA_ACCESS ON MEDIA_ACCESS(ITEM_ID, GROUP_ID);
CREATE INDEX IDX_MEDIA_LOG_MEDIA_ITEM ON MEDIA_LOG(ITEM_ID);
CREATE INDEX IDX_MEDIA_LOG_USER ON MEDIA_LOG(USER_ID);
CREATE INDEX IDX_MEDIA_LOG_DATE ON MEDIA_LOG(DATE);
CREATE INDEX IDX_MEDIA_LOG_ACTION ON MEDIA_LOG(ACTION);
CREATE INDEX IDX_DATA_DATATYPE ON DATA(TYPE_ID);
CREATE INDEX IDX_DATA_ACCESS_DATA ON DATA_ACCESS(DATASET_ID);
CREATE INDEX IDX_DATA_ACCESS_USER_GROUP ON DATA_ACCESS(GROUP_ID);
CREATE unique INDEX IDX_DATA_ACCESS ON DATA_ACCESS(DATASET_ID, GROUP_ID);


-- Updates
ALTER TABLE USER_GROUP_USER ADD COLUMN IS_ADMIN boolean NOT NULL DEFAULT FALSE;
CREATE unique INDEX IDX_USER_GROUP_USER ON USER_GROUP_USER(USER_GROUP_ID, USER_ID);

ALTER TABLE MEDIA_ITEM_FILE ADD COLUMN IS_PRIMARY boolean NOT NULL DEFAULT FALSE;
CREATE unique INDEX IDX_MEDIA_ITEM_FILE ON MEDIA_ITEM_FILE(MEDIA_ITEM_ID, FILE_ID);

CREATE unique INDEX IDX_MEDIA_ITEM_KEYWORD ON MEDIA_ITEM_KEYWORD(MEDIA_ITEM_ID, KEYWORD_ID);